[{"C:\\Users\\Daniel\\the-zebra-homework\\src\\index.js":"1","C:\\Users\\Daniel\\the-zebra-homework\\src\\App.js":"2","C:\\Users\\Daniel\\the-zebra-homework\\src\\components\\button\\Button.js":"3","C:\\Users\\Daniel\\the-zebra-homework\\src\\components\\insurance-description\\InsuranceDescription.js":"4","C:\\Users\\Daniel\\the-zebra-homework\\src\\components\\expandable-container\\ExpandableContainer.js":"5","C:\\Users\\Daniel\\the-zebra-homework\\src\\components\\features-description\\FeaturesDescription.js":"6","C:\\Users\\Daniel\\the-zebra-homework\\src\\components\\name-container\\NameContainer.js":"7","C:\\Users\\Daniel\\the-zebra-homework\\src\\components\\name-container-display\\NameContainerDisplay.js":"8","C:\\Users\\Daniel\\the-zebra-homework\\src\\utils\\UtilityFunctions.js":"9","C:\\Users\\Daniel\\the-zebra-homework\\src\\components\\price-comparison-title\\PriceComparisonTitle.js":"10","C:\\Users\\Daniel\\the-zebra-homework\\src\\components\\price-container\\PriceContainer.js":"11","C:\\Users\\Daniel\\the-zebra-homework\\src\\components\\rate\\Rate.js":"12"},{"size":219,"mtime":1611607705318,"results":"13","hashOfConfig":"14"},{"size":2637,"mtime":1611856693332,"results":"15","hashOfConfig":"14"},{"size":714,"mtime":1611614397042,"results":"16","hashOfConfig":"14"},{"size":655,"mtime":1611786236066,"results":"17","hashOfConfig":"14"},{"size":487,"mtime":1611786236035,"results":"18","hashOfConfig":"14"},{"size":606,"mtime":1611851287503,"results":"19","hashOfConfig":"14"},{"size":503,"mtime":1611851287516,"results":"20","hashOfConfig":"14"},{"size":957,"mtime":1611851287510,"results":"21","hashOfConfig":"14"},{"size":1502,"mtime":1611851287545,"results":"22","hashOfConfig":"14"},{"size":925,"mtime":1611855126745,"results":"23","hashOfConfig":"14"},{"size":541,"mtime":1611857974962,"results":"24","hashOfConfig":"14"},{"size":296,"mtime":1611858114058,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"t2rioo",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Daniel\\the-zebra-homework\\src\\index.js",[],["54","55"],"C:\\Users\\Daniel\\the-zebra-homework\\src\\App.js",["56"],"C:\\Users\\Daniel\\the-zebra-homework\\src\\components\\button\\Button.js",["57","58"],"import React from \"react\";\r\n// SVG files for the different logos\r\nimport Bolt from \"../../assets/IconBoltWhite.svg\";\r\nimport Arrow from \"../../assets/IconArrowDown.svg\";\r\n\r\nconst Button = ({ text, type, link }) => {\r\n  // Determine which icon to load based on the type passed in\r\n  let logo;\r\n  if (Number(type) === 0 || Number(type) === 1) {\r\n    import(`../../assets/IconArrowDown.svg`);\r\n  } else if (Number(type) === 2) {\r\n    logo = null;\r\n  } else if (Number(type) === 3) {\r\n    logo = import(`../../assets/IconBoltWhite.svg`);\r\n  }\r\n\r\n  return (\r\n    <div className={`button button__${type}`}>\r\n      {logo}\r\n      <div className=\"button__text\">{text}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","C:\\Users\\Daniel\\the-zebra-homework\\src\\components\\insurance-description\\InsuranceDescription.js",[],"C:\\Users\\Daniel\\the-zebra-homework\\src\\components\\expandable-container\\ExpandableContainer.js",[],"C:\\Users\\Daniel\\the-zebra-homework\\src\\components\\features-description\\FeaturesDescription.js",[],"C:\\Users\\Daniel\\the-zebra-homework\\src\\components\\name-container\\NameContainer.js",["59"],"import React from \"react\";\r\nimport NameContainerDisplay from \"../name-container-display/NameContainerDisplay\";\r\nimport carrierLogo from \"./../../assets/logo-carrier-sm-default.png\";\r\n\r\nconst NameContainer = ({ name, stars, features }) => {\r\n  return (\r\n    <div className=\"name-container\">\r\n      <img src={carrierLogo} alt=\"carrier photo\" className=\"carrier-image\" />\r\n      <NameContainerDisplay name={name} stars={stars} features={features} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NameContainer;\r\n","C:\\Users\\Daniel\\the-zebra-homework\\src\\components\\name-container-display\\NameContainerDisplay.js",["60","61"],"import React from \"react\";\r\nimport goldStar from \"./../../assets/IconStarGold.png\";\r\nimport whiteStar from \"./../../assets/IconStarWhite.png\";\r\nimport icon from \"./../../assets/IconFeaturesNonOwner.png\";\r\nimport icon2 from \"./../../assets/IconFeaturesMobile.png\";\r\nimport {\r\n  calculateRatings,\r\n  displayFeatures,\r\n} from \"../../utils/UtilityFunctions\";\r\n\r\nconst NameContainerDisplay = ({ name, stars, features }) => {\r\n  const ratings = calculateRatings(stars, goldStar, whiteStar);\r\n  const stuff = displayFeatures(features);\r\n  console.log(stuff);\r\n\r\n  return (\r\n    <div className=\"name-container-display\">\r\n      <div className=\"name-container-display__title\">{name}</div>\r\n      <div className=\"name-container-display__data\">\r\n        <div className=\"name-container-display__ratings\">{ratings}</div>\r\n        <div className=\"name-container-display__features\">{stuff}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NameContainerDisplay;\r\n","C:\\Users\\Daniel\\the-zebra-homework\\src\\utils\\UtilityFunctions.js",[],"C:\\Users\\Daniel\\the-zebra-homework\\src\\components\\price-comparison-title\\PriceComparisonTitle.js",[],"C:\\Users\\Daniel\\the-zebra-homework\\src\\components\\price-container\\PriceContainer.js",[],"C:\\Users\\Daniel\\the-zebra-homework\\src\\components\\rate\\Rate.js",[],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":4,"column":8,"nodeType":"68","messageId":"69","endLine":4,"endColumn":14},{"ruleId":"66","severity":1,"message":"70","line":3,"column":8,"nodeType":"68","messageId":"69","endLine":3,"endColumn":12},{"ruleId":"66","severity":1,"message":"71","line":4,"column":8,"nodeType":"68","messageId":"69","endLine":4,"endColumn":13},{"ruleId":"72","severity":1,"message":"73","line":8,"column":7,"nodeType":"74","endLine":8,"endColumn":78},{"ruleId":"66","severity":1,"message":"75","line":4,"column":8,"nodeType":"68","messageId":"69","endLine":4,"endColumn":12},{"ruleId":"66","severity":1,"message":"76","line":5,"column":8,"nodeType":"68","messageId":"69","endLine":5,"endColumn":13},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Bolt' is defined but never used.","'Arrow' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'icon' is defined but never used.","'icon2' is defined but never used.","no-global-assign","no-unsafe-negation"]