[{"C:\\Users\\Daniel\\the-zebra-homework\\src\\index.js":"1","C:\\Users\\Daniel\\the-zebra-homework\\src\\App.js":"2","C:\\Users\\Daniel\\the-zebra-homework\\src\\components\\button\\Button.js":"3","C:\\Users\\Daniel\\the-zebra-homework\\src\\components\\insurance-description\\InsuranceDescription.js":"4","C:\\Users\\Daniel\\the-zebra-homework\\src\\components\\expandable-container\\ExpandableContainer.js":"5","C:\\Users\\Daniel\\the-zebra-homework\\src\\components\\features-description\\FeaturesDescription.js":"6","C:\\Users\\Daniel\\the-zebra-homework\\src\\components\\name-container\\NameContainer.js":"7","C:\\Users\\Daniel\\the-zebra-homework\\src\\components\\name-container-display\\NameContainerDisplay.js":"8","C:\\Users\\Daniel\\the-zebra-homework\\src\\utils\\UtilityFunctions.js":"9"},{"size":219,"mtime":1611607705318,"results":"10","hashOfConfig":"11"},{"size":1105,"mtime":1611788037110,"results":"12","hashOfConfig":"11"},{"size":714,"mtime":1611614397042,"results":"13","hashOfConfig":"11"},{"size":655,"mtime":1611786236066,"results":"14","hashOfConfig":"11"},{"size":487,"mtime":1611786236035,"results":"15","hashOfConfig":"11"},{"size":606,"mtime":1611848306022,"results":"16","hashOfConfig":"11"},{"size":503,"mtime":1611845700971,"results":"17","hashOfConfig":"11"},{"size":957,"mtime":1611848230799,"results":"18","hashOfConfig":"11"},{"size":1502,"mtime":1611848434690,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"t2rioo",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Daniel\\the-zebra-homework\\src\\index.js",[],["40","41"],"C:\\Users\\Daniel\\the-zebra-homework\\src\\App.js",["42"],"C:\\Users\\Daniel\\the-zebra-homework\\src\\components\\button\\Button.js",["43","44"],"import React from \"react\";\r\n// SVG files for the different logos\r\nimport Bolt from \"../../assets/IconBoltWhite.svg\";\r\nimport Arrow from \"../../assets/IconArrowDown.svg\";\r\n\r\nconst Button = ({ text, type, link }) => {\r\n  // Determine which icon to load based on the type passed in\r\n  let logo;\r\n  if (Number(type) === 0 || Number(type) === 1) {\r\n    import(`../../assets/IconArrowDown.svg`);\r\n  } else if (Number(type) === 2) {\r\n    logo = null;\r\n  } else if (Number(type) === 3) {\r\n    logo = import(`../../assets/IconBoltWhite.svg`);\r\n  }\r\n\r\n  return (\r\n    <div className={`button button__${type}`}>\r\n      {logo}\r\n      <div className=\"button__text\">{text}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","C:\\Users\\Daniel\\the-zebra-homework\\src\\components\\insurance-description\\InsuranceDescription.js",[],"C:\\Users\\Daniel\\the-zebra-homework\\src\\components\\expandable-container\\ExpandableContainer.js",[],"C:\\Users\\Daniel\\the-zebra-homework\\src\\components\\features-description\\FeaturesDescription.js",[],"C:\\Users\\Daniel\\the-zebra-homework\\src\\components\\name-container\\NameContainer.js",["45"],"C:\\Users\\Daniel\\the-zebra-homework\\src\\components\\name-container-display\\NameContainerDisplay.js",["46","47"],"C:\\Users\\Daniel\\the-zebra-homework\\src\\utils\\UtilityFunctions.js",[],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":3,"column":8,"nodeType":"54","messageId":"55","endLine":3,"endColumn":14},{"ruleId":"52","severity":1,"message":"56","line":3,"column":8,"nodeType":"54","messageId":"55","endLine":3,"endColumn":12},{"ruleId":"52","severity":1,"message":"57","line":4,"column":8,"nodeType":"54","messageId":"55","endLine":4,"endColumn":13},{"ruleId":"58","severity":1,"message":"59","line":8,"column":7,"nodeType":"60","endLine":8,"endColumn":78},{"ruleId":"52","severity":1,"message":"61","line":4,"column":8,"nodeType":"54","messageId":"55","endLine":4,"endColumn":12},{"ruleId":"52","severity":1,"message":"62","line":5,"column":8,"nodeType":"54","messageId":"55","endLine":5,"endColumn":13},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Bolt' is defined but never used.","'Arrow' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'icon' is defined but never used.","'icon2' is defined but never used.","no-global-assign","no-unsafe-negation"]